{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: '/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle auth errors\napi.interceptors.response.use(response => {\n  return response.data;\n}, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.reload();\n  }\n  return Promise.reject(error);\n});\n\n// API service object\nconst apiService = {\n  // Authentication endpoints\n  auth: {\n    login: async credentials => {\n      try {\n        const response = await api.post('/auth/login', credentials);\n        return response;\n      } catch (error) {\n        console.error('Login error:', error);\n        throw error;\n      }\n    },\n    register: async userData => {\n      try {\n        const response = await api.post('/auth/register', userData);\n        return response;\n      } catch (error) {\n        console.error('Register error:', error);\n        throw error;\n      }\n    },\n    verifyToken: async () => {\n      try {\n        const response = await api.get('/auth/me');\n        return response;\n      } catch (error) {\n        console.error('Token verification error:', error);\n        throw error;\n      }\n    },\n    logout: async () => {\n      try {\n        await api.post('/auth/logout');\n        localStorage.removeItem('token');\n      } catch (error) {\n        console.error('Logout error:', error);\n        localStorage.removeItem('token');\n      }\n    }\n  },\n  // User endpoints\n  users: {\n    getProfile: async () => {\n      try {\n        const response = await api.get('/users/profile');\n        return response;\n      } catch (error) {\n        console.error('Get profile error:', error);\n        throw error;\n      }\n    },\n    updateProfile: async profileData => {\n      try {\n        const response = await api.put('/users/profile', profileData);\n        return response;\n      } catch (error) {\n        console.error('Update profile error:', error);\n        throw error;\n      }\n    },\n    getMeetings: async () => {\n      try {\n        const response = await api.get('/users/meetings');\n        return response;\n      } catch (error) {\n        console.error('Get meetings error:', error);\n        throw error;\n      }\n    },\n    scheduleMeeting: async meetingData => {\n      try {\n        const response = await api.post('/users/meetings', meetingData);\n        return response;\n      } catch (error) {\n        console.error('Schedule meeting error:', error);\n        throw error;\n      }\n    }\n  },\n  // Au pair endpoints\n  pairners: {\n    getAll: async (params = {}) => {\n      try {\n        const response = await api.get('/pairners', {\n          params\n        });\n        return response;\n      } catch (error) {\n        console.error('Get pairners error:', error);\n        return {\n          pairners: []\n        };\n      }\n    },\n    getById: async id => {\n      try {\n        const response = await api.get(`/pairners/${id}`);\n        return response;\n      } catch (error) {\n        console.error('Get pairner error:', error);\n        throw error;\n      }\n    },\n    getRecommended: async () => {\n      try {\n        const response = await api.get('/pairners/recommended');\n        return response;\n      } catch (error) {\n        console.error('Get recommended pairners error:', error);\n        return {\n          pairners: []\n        };\n      }\n    },\n    search: async searchParams => {\n      try {\n        const response = await api.get('/pairners/search', {\n          params: searchParams\n        });\n        return response;\n      } catch (error) {\n        console.error('Search pairners error:', error);\n        return {\n          pairners: []\n        };\n      }\n    }\n  },\n  // Chat endpoints\n  chat: {\n    getConversations: async () => {\n      try {\n        const response = await api.get('/chat/conversations');\n        return response;\n      } catch (error) {\n        console.error('Get conversations error:', error);\n        return {\n          conversations: []\n        };\n      }\n    },\n    getMessages: async pairnerId => {\n      try {\n        const response = await api.get(`/chat/${pairnerId}`);\n        return response;\n      } catch (error) {\n        console.error('Get messages error:', error);\n        return {\n          messages: []\n        };\n      }\n    },\n    sendMessage: async (pairnerId, message) => {\n      try {\n        const response = await api.post(`/chat/${pairnerId}`, {\n          message\n        });\n        return response;\n      } catch (error) {\n        console.error('Send message error:', error);\n        throw error;\n      }\n    },\n    getStats: async () => {\n      try {\n        const response = await api.get('/chat/stats');\n        return response;\n      } catch (error) {\n        console.error('Get chat stats error:', error);\n        return {\n          stats: {\n            total_conversations: 0\n          }\n        };\n      }\n    }\n  },\n  // Health check\n  health: {\n    check: async () => {\n      try {\n        const response = await api.get('/health');\n        return response;\n      } catch (error) {\n        console.error('Health check error:', error);\n        throw error;\n      }\n    }\n  }\n};\nexport default apiService;","map":{"version":3,"names":["axios","api","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","data","_error$response","status","removeItem","window","location","reload","apiService","auth","login","credentials","post","console","register","userData","verifyToken","get","logout","users","getProfile","updateProfile","profileData","put","getMeetings","scheduleMeeting","meetingData","pairners","getAll","params","getById","id","getRecommended","search","searchParams","chat","getConversations","conversations","getMessages","pairnerId","messages","sendMessage","message","getStats","stats","total_conversations","health","check"],"sources":["/workspace/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: '/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle auth errors\napi.interceptors.response.use(\n  (response) => {\n    return response.data;\n  },\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      window.location.reload();\n    }\n    return Promise.reject(error);\n  }\n);\n\n// API service object\nconst apiService = {\n  // Authentication endpoints\n  auth: {\n    login: async (credentials) => {\n      try {\n        const response = await api.post('/auth/login', credentials);\n        return response;\n      } catch (error) {\n        console.error('Login error:', error);\n        throw error;\n      }\n    },\n\n    register: async (userData) => {\n      try {\n        const response = await api.post('/auth/register', userData);\n        return response;\n      } catch (error) {\n        console.error('Register error:', error);\n        throw error;\n      }\n    },\n\n    verifyToken: async () => {\n      try {\n        const response = await api.get('/auth/me');\n        return response;\n      } catch (error) {\n        console.error('Token verification error:', error);\n        throw error;\n      }\n    },\n\n    logout: async () => {\n      try {\n        await api.post('/auth/logout');\n        localStorage.removeItem('token');\n      } catch (error) {\n        console.error('Logout error:', error);\n        localStorage.removeItem('token');\n      }\n    }\n  },\n\n  // User endpoints\n  users: {\n    getProfile: async () => {\n      try {\n        const response = await api.get('/users/profile');\n        return response;\n      } catch (error) {\n        console.error('Get profile error:', error);\n        throw error;\n      }\n    },\n\n    updateProfile: async (profileData) => {\n      try {\n        const response = await api.put('/users/profile', profileData);\n        return response;\n      } catch (error) {\n        console.error('Update profile error:', error);\n        throw error;\n      }\n    },\n\n    getMeetings: async () => {\n      try {\n        const response = await api.get('/users/meetings');\n        return response;\n      } catch (error) {\n        console.error('Get meetings error:', error);\n        throw error;\n      }\n    },\n\n    scheduleMeeting: async (meetingData) => {\n      try {\n        const response = await api.post('/users/meetings', meetingData);\n        return response;\n      } catch (error) {\n        console.error('Schedule meeting error:', error);\n        throw error;\n      }\n    }\n  },\n\n  // Au pair endpoints\n  pairners: {\n    getAll: async (params = {}) => {\n      try {\n        const response = await api.get('/pairners', { params });\n        return response;\n      } catch (error) {\n        console.error('Get pairners error:', error);\n        return { pairners: [] };\n      }\n    },\n\n    getById: async (id) => {\n      try {\n        const response = await api.get(`/pairners/${id}`);\n        return response;\n      } catch (error) {\n        console.error('Get pairner error:', error);\n        throw error;\n      }\n    },\n\n    getRecommended: async () => {\n      try {\n        const response = await api.get('/pairners/recommended');\n        return response;\n      } catch (error) {\n        console.error('Get recommended pairners error:', error);\n        return { pairners: [] };\n      }\n    },\n\n    search: async (searchParams) => {\n      try {\n        const response = await api.get('/pairners/search', { params: searchParams });\n        return response;\n      } catch (error) {\n        console.error('Search pairners error:', error);\n        return { pairners: [] };\n      }\n    }\n  },\n\n  // Chat endpoints\n  chat: {\n    getConversations: async () => {\n      try {\n        const response = await api.get('/chat/conversations');\n        return response;\n      } catch (error) {\n        console.error('Get conversations error:', error);\n        return { conversations: [] };\n      }\n    },\n\n    getMessages: async (pairnerId) => {\n      try {\n        const response = await api.get(`/chat/${pairnerId}`);\n        return response;\n      } catch (error) {\n        console.error('Get messages error:', error);\n        return { messages: [] };\n      }\n    },\n\n    sendMessage: async (pairnerId, message) => {\n      try {\n        const response = await api.post(`/chat/${pairnerId}`, { message });\n        return response;\n      } catch (error) {\n        console.error('Send message error:', error);\n        throw error;\n      }\n    },\n\n    getStats: async () => {\n      try {\n        const response = await api.get('/chat/stats');\n        return response;\n      } catch (error) {\n        console.error('Get chat stats error:', error);\n        return { stats: { total_conversations: 0 } };\n      }\n    }\n  },\n\n  // Health check\n  health: {\n    check: async () => {\n      try {\n        const response = await api.get('/health');\n        return response;\n      } catch (error) {\n        console.error('Health check error:', error);\n        throw error;\n      }\n    }\n  }\n};\n\nexport default apiService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}