{"ast":null,"code":"var _jsxFileName = \"/workspace/client/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport apiService from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst AUTH_ACTIONS = {\n  LOGIN_START: 'LOGIN_START',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\n  LOGOUT: 'LOGOUT',\n  REGISTER_START: 'REGISTER_START',\n  REGISTER_SUCCESS: 'REGISTER_SUCCESS',\n  REGISTER_FAILURE: 'REGISTER_FAILURE',\n  VERIFY_START: 'VERIFY_START',\n  VERIFY_SUCCESS: 'VERIFY_SUCCESS',\n  VERIFY_FAILURE: 'VERIFY_FAILURE',\n  UPDATE_PROFILE: 'UPDATE_PROFILE',\n  CLEAR_ERROR: 'CLEAR_ERROR'\n};\nconst initialState = {\n  user: null,\n  token: null,\n  isAuthenticated: false,\n  isLoading: false,\n  error: null,\n  isInitialized: false\n};\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case AUTH_ACTIONS.LOGIN_START:\n    case AUTH_ACTIONS.REGISTER_START:\n    case AUTH_ACTIONS.VERIFY_START:\n      return {\n        ...state,\n        isLoading: true,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n    case AUTH_ACTIONS.REGISTER_SUCCESS:\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null,\n        isInitialized: true\n      };\n    case AUTH_ACTIONS.LOGIN_FAILURE:\n    case AUTH_ACTIONS.REGISTER_FAILURE:\n    case AUTH_ACTIONS.VERIFY_FAILURE:\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: action.payload,\n        isInitialized: true\n      };\n    case AUTH_ACTIONS.LOGOUT:\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: null,\n        isInitialized: true\n      };\n    case AUTH_ACTIONS.VERIFY_SUCCESS:\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null,\n        isInitialized: true\n      };\n    case AUTH_ACTIONS.UPDATE_PROFILE:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          ...action.payload\n        },\n        error: null\n      };\n    case AUTH_ACTIONS.CLEAR_ERROR:\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Initialize auth state on mount\n  useEffect(() => {\n    initializeAuth();\n  }, []);\n  const initializeAuth = async () => {\n    try {\n      dispatch({\n        type: AUTH_ACTIONS.VERIFY_START\n      });\n      const token = localStorage.getItem('token');\n      if (!token) {\n        dispatch({\n          type: AUTH_ACTIONS.VERIFY_FAILURE,\n          payload: 'No token found'\n        });\n        return;\n      }\n\n      // Verify token with backend\n      const response = await apiService.auth.verifyToken();\n      if (response.success) {\n        dispatch({\n          type: AUTH_ACTIONS.VERIFY_SUCCESS,\n          payload: {\n            user: response.user,\n            token: token\n          }\n        });\n      } else {\n        localStorage.removeItem('token');\n        dispatch({\n          type: AUTH_ACTIONS.VERIFY_FAILURE,\n          payload: 'Invalid token'\n        });\n      }\n    } catch (error) {\n      localStorage.removeItem('token');\n      dispatch({\n        type: AUTH_ACTIONS.VERIFY_FAILURE,\n        payload: 'Token verification failed'\n      });\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_START\n      });\n      const response = await apiService.auth.login({\n        email,\n        password\n      });\n      if (response.success) {\n        localStorage.setItem('token', response.token);\n        dispatch({\n          type: AUTH_ACTIONS.LOGIN_SUCCESS,\n          payload: {\n            user: response.user,\n            token: response.token\n          }\n        });\n        return {\n          success: true\n        };\n      } else {\n        dispatch({\n          type: AUTH_ACTIONS.LOGIN_FAILURE,\n          payload: response.message\n        });\n        return {\n          success: false,\n          message: response.message\n        };\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed';\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: message\n      });\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      dispatch({\n        type: AUTH_ACTIONS.REGISTER_START\n      });\n      const response = await apiService.auth.register(userData);\n      if (response.success) {\n        localStorage.setItem('token', response.token);\n        dispatch({\n          type: AUTH_ACTIONS.REGISTER_SUCCESS,\n          payload: {\n            user: response.user,\n            token: response.token\n          }\n        });\n        return {\n          success: true\n        };\n      } else {\n        dispatch({\n          type: AUTH_ACTIONS.REGISTER_FAILURE,\n          payload: response.message\n        });\n        return {\n          success: false,\n          message: response.message\n        };\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed';\n      dispatch({\n        type: AUTH_ACTIONS.REGISTER_FAILURE,\n        payload: message\n      });\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    dispatch({\n      type: AUTH_ACTIONS.LOGOUT\n    });\n  };\n  const updateProfile = async profileData => {\n    try {\n      const response = await apiService.users.updateProfile(profileData);\n      if (response.success) {\n        dispatch({\n          type: AUTH_ACTIONS.UPDATE_PROFILE,\n          payload: response.user\n        });\n        return {\n          success: true\n        };\n      } else {\n        return {\n          success: false,\n          message: response.message\n        };\n      }\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Profile update failed';\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n  const clearError = () => {\n    dispatch({\n      type: AUTH_ACTIONS.CLEAR_ERROR\n    });\n  };\n  const getDisplayName = () => {\n    var _state$user;\n    return ((_state$user = state.user) === null || _state$user === void 0 ? void 0 : _state$user.name) || 'User';\n  };\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    updateProfile,\n    clearError,\n    getDisplayName\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","apiService","jsxDEV","_jsxDEV","AuthContext","AUTH_ACTIONS","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","REGISTER_START","REGISTER_SUCCESS","REGISTER_FAILURE","VERIFY_START","VERIFY_SUCCESS","VERIFY_FAILURE","UPDATE_PROFILE","CLEAR_ERROR","initialState","user","token","isAuthenticated","isLoading","error","isInitialized","authReducer","state","action","type","payload","AuthProvider","children","_s","dispatch","initializeAuth","localStorage","getItem","response","auth","verifyToken","success","removeItem","login","email","password","setItem","message","_error$response","_error$response$data","data","register","userData","_error$response2","_error$response2$data","logout","updateProfile","profileData","users","_error$response3","_error$response3$data","clearError","getDisplayName","_state$user","name","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/workspace/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport apiService from '../services/api';\n\nconst AuthContext = createContext();\n\nconst AUTH_ACTIONS = {\n  LOGIN_START: 'LOGIN_START',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\n  LOGOUT: 'LOGOUT',\n  REGISTER_START: 'REGISTER_START',\n  REGISTER_SUCCESS: 'REGISTER_SUCCESS',\n  REGISTER_FAILURE: 'REGISTER_FAILURE',\n  VERIFY_START: 'VERIFY_START',\n  VERIFY_SUCCESS: 'VERIFY_SUCCESS',\n  VERIFY_FAILURE: 'VERIFY_FAILURE',\n  UPDATE_PROFILE: 'UPDATE_PROFILE',\n  CLEAR_ERROR: 'CLEAR_ERROR'\n};\n\nconst initialState = {\n  user: null,\n  token: null,\n  isAuthenticated: false,\n  isLoading: false,\n  error: null,\n  isInitialized: false\n};\n\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case AUTH_ACTIONS.LOGIN_START:\n    case AUTH_ACTIONS.REGISTER_START:\n    case AUTH_ACTIONS.VERIFY_START:\n      return {\n        ...state,\n        isLoading: true,\n        error: null\n      };\n\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n    case AUTH_ACTIONS.REGISTER_SUCCESS:\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null,\n        isInitialized: true\n      };\n\n    case AUTH_ACTIONS.LOGIN_FAILURE:\n    case AUTH_ACTIONS.REGISTER_FAILURE:\n    case AUTH_ACTIONS.VERIFY_FAILURE:\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: action.payload,\n        isInitialized: true\n      };\n\n    case AUTH_ACTIONS.LOGOUT:\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: null,\n        isInitialized: true\n      };\n\n    case AUTH_ACTIONS.VERIFY_SUCCESS:\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null,\n        isInitialized: true\n      };\n\n    case AUTH_ACTIONS.UPDATE_PROFILE:\n      return {\n        ...state,\n        user: { ...state.user, ...action.payload },\n        error: null\n      };\n\n    case AUTH_ACTIONS.CLEAR_ERROR:\n      return {\n        ...state,\n        error: null\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Initialize auth state on mount\n  useEffect(() => {\n    initializeAuth();\n  }, []);\n\n  const initializeAuth = async () => {\n    try {\n      dispatch({ type: AUTH_ACTIONS.VERIFY_START });\n      \n      const token = localStorage.getItem('token');\n      if (!token) {\n        dispatch({ type: AUTH_ACTIONS.VERIFY_FAILURE, payload: 'No token found' });\n        return;\n      }\n\n      // Verify token with backend\n      const response = await apiService.auth.verifyToken();\n      \n      if (response.success) {\n        dispatch({\n          type: AUTH_ACTIONS.VERIFY_SUCCESS,\n          payload: {\n            user: response.user,\n            token: token\n          }\n        });\n      } else {\n        localStorage.removeItem('token');\n        dispatch({ type: AUTH_ACTIONS.VERIFY_FAILURE, payload: 'Invalid token' });\n      }\n    } catch (error) {\n      localStorage.removeItem('token');\n      dispatch({ type: AUTH_ACTIONS.VERIFY_FAILURE, payload: 'Token verification failed' });\n    }\n  };\n\n  const login = async (email, password) => {\n    try {\n      dispatch({ type: AUTH_ACTIONS.LOGIN_START });\n      \n      const response = await apiService.auth.login({ email, password });\n      \n      if (response.success) {\n        localStorage.setItem('token', response.token);\n        dispatch({\n          type: AUTH_ACTIONS.LOGIN_SUCCESS,\n          payload: {\n            user: response.user,\n            token: response.token\n          }\n        });\n        return { success: true };\n      } else {\n        dispatch({ type: AUTH_ACTIONS.LOGIN_FAILURE, payload: response.message });\n        return { success: false, message: response.message };\n      }\n    } catch (error) {\n      const message = error.response?.data?.message || 'Login failed';\n      dispatch({ type: AUTH_ACTIONS.LOGIN_FAILURE, payload: message });\n      return { success: false, message };\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      dispatch({ type: AUTH_ACTIONS.REGISTER_START });\n      \n      const response = await apiService.auth.register(userData);\n      \n      if (response.success) {\n        localStorage.setItem('token', response.token);\n        dispatch({\n          type: AUTH_ACTIONS.REGISTER_SUCCESS,\n          payload: {\n            user: response.user,\n            token: response.token\n          }\n        });\n        return { success: true };\n      } else {\n        dispatch({ type: AUTH_ACTIONS.REGISTER_FAILURE, payload: response.message });\n        return { success: false, message: response.message };\n      }\n    } catch (error) {\n      const message = error.response?.data?.message || 'Registration failed';\n      dispatch({ type: AUTH_ACTIONS.REGISTER_FAILURE, payload: message });\n      return { success: false, message };\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    dispatch({ type: AUTH_ACTIONS.LOGOUT });\n  };\n\n  const updateProfile = async (profileData) => {\n    try {\n      const response = await apiService.users.updateProfile(profileData);\n      \n      if (response.success) {\n        dispatch({\n          type: AUTH_ACTIONS.UPDATE_PROFILE,\n          payload: response.user\n        });\n        return { success: true };\n      } else {\n        return { success: false, message: response.message };\n      }\n    } catch (error) {\n      const message = error.response?.data?.message || 'Profile update failed';\n      return { success: false, message };\n    }\n  };\n\n  const clearError = () => {\n    dispatch({ type: AUTH_ACTIONS.CLEAR_ERROR });\n  };\n\n  const getDisplayName = () => {\n    return state.user?.name || 'User';\n  };\n\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    updateProfile,\n    clearError,\n    getDisplayName\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}